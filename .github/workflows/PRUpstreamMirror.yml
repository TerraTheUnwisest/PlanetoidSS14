name: Mirror Merged PRs from Upstream

on:
  schedule:
    - cron: '0 * * * *' # Runs every hour
  workflow_dispatch:

jobs:
  mirror_prs:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout the downstream repository
      uses: actions/checkout@v2
      with:
        repository: TerraTheUnwisest/PlanetoidSS14
        token: ${{ secrets.GH_PAT }}

    - name: Fetch PRs from upstream
      run: |
        git remote add upstream https://github.com/space-wizards/space-station-14.git
        git fetch upstream

    - name: List merged PRs from upstream
      id: list_prs
      run: |
        curl -H "Authorization: token ${{ secrets.GH_PAT }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/space-wizards/space-station-14/pulls?state=closed \
          | jq '.[] | select(.merged_at != null) | .number' > merged_prs.txt
        cat merged_prs.txt

    - name: List existing PRs in downstream
      id: existing_prs
      run: |
        curl -H "Authorization: token ${{ secrets.GH_PAT }}" \
          -H "Accept: application/vnd.github.v3+json" \
          https://api.github.com/repos/TerraTheUnwisest/PlanetoidSS14/pulls?state=open \
          | jq -r '.[] | select(.head.ref | startswith("mirror-pr-")) | .head.ref' > existing_prs.txt
        cat existing_prs.txt

    - name: Process merged PRs
      run: |
        while read pr_number; do
          if grep -Fxq "mirror-pr-$pr_number" existing_prs.txt; then
            echo "PR $pr_number already mirrored, skipping..."
            continue
          fi

          # Get PR details
          pr=$(curl -H "Authorization: token ${{ secrets.GH_PAT }}" \
              -H "Accept: application/vnd.github.v3+json" \
              https://api.github.com/repos/space-wizards/space-station-14/pulls/$pr_number)

          pr_title=$(echo $pr | jq -r '.title')
          pr_body=$(echo $pr | jq -r '.body')
          pr_merge_commit=$(echo $pr | jq -r '.merge_commit_sha')

          # Debugging logs
          echo "PR Number: $pr_number"
          echo "PR Title: $pr_title"
          echo "PR Body: $pr_body"
          echo "PR Merge Commit: $pr_merge_commit"

          # Ensure we are on the main branch and reset any changes
          git checkout master
          git reset --hard origin/master

          # Create a new branch based on the merge commit
          git checkout -b mirror-pr-$pr_number $pr_merge_commit

          # Push the new branch to the downstream repository
          git push origin mirror-pr-$pr_number

          # Create a new PR in the downstream repository
          pr_response=$(curl -X POST -H "Authorization: token ${{ secrets.GH_PAT }}" \
            -H "Accept: application/vnd.github.v3+json" \
            https://api.github.com/repos/TerraTheUnwisest/PlanetoidSS14/pulls \
            -d "$(jq -n --arg title "MIRROR: $pr_title" --arg body "$pr_body" --arg base "master" --arg head "mirror-pr-$pr_number" \
              '{title: $title, body: $body, base: $base, head: $head}')")

          # Check if the PR was successfully created
          pr_url=$(echo $pr_response | jq -r '.html_url')
          if [ "$pr_url" != "null" ]; then
            echo "Successfully created PR: $pr_url"
          else
            echo "Failed to create PR for $pr_number"
            git push origin --delete mirror-pr-$pr_number
          fi

          # Ensure we are on the main branch for the next iteration
          git checkout master

        done < merged_prs.txt

    - name: Clean up
      run: |
        rm merged_prs.txt existing_prs.txt
